version: '3.4'
services:
  listener:
    hostname: listener
    container_name: listener
    image: ${IMAGE_NAME}
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - zookeeper
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: production
      DB_URL: jdbc:postgresql://postgres:5432/example
      DB_USERNAME: example
      DB_PASSWORD: example_pass
      KAFKA_SERVERS: kafka:9092
      KAFKA_MAX_POLL_INTERVAL_MS: 10000
      KAFKA_MAX_POLL_RECORS_COUNT: 10
      KAFKA_GROUP_ID: kafkaExampleConsumer
      KAFKA_INBOUND_TOPIC: exampleTopic
      JAVA_OPTS: '-Xmx650m -Xms650m'
    healthcheck:
      test: "wget -s localhost:8080/actuator/health"
      interval: 30s
      retries: 10

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=example
      - POSTGRES_PASSWORD=example_pass
      - POSTGRES_DB=example
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_MESSAGE_TIMESTAMP_TYPE: LogAppendTime
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
